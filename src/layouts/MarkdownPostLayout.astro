---
import Layout from "./Layout.astro";
import Card from "../components/Card.astro";
import { getCollection } from "astro:content";
import "../styles/waves.scss";

const { data } = Astro.props;

const allPosts = await getCollection("posts");
// Sort allPosts by date of the post
allPosts.sort(
  (a, b) =>
    new Date(a.data.pubDate).getTime() - new Date(b.data.pubDate).getTime()
);
// Check if there is a post previous to the current one and after
const previousPost = allPosts
  .slice()
  .reverse()
  .find((post) => new Date(post.data.pubDate) < new Date(data.pubDate));
const nextPost = allPosts.find(
  (post) => new Date(post.data.pubDate) > new Date(data.pubDate)
);
---

<Layout title={data.title}>
  <main class="animate-in fade-in duration-1000">
    <h1>{data.title}</h1>
    <p class="m-0 mb-4 text-center"><em>{data.description}</em></p>
    <div
      class="content ml-4 mr-4 space-y-4 rounded-md border border-blue-400 bg-white p-4 dark:border-blue-600 dark:bg-gray-800"
    >
      <slot />
      <p>
        {
          `Écrit par ${data.author} le ${new Date(
            data.pubDate
          ).toLocaleDateString("fr-FR", {
            weekday: "long",
            year: "numeric",
            month: "long",
            day: "numeric",
          })}`
        }
      </p>
      {
        data.image ? (
          <img src={data.image.url} width="300" alt={data.image.alt} />
        ) : (
          ""
        )
      }
    </div>
    <ul role="list" class="flex justify-between gap-4 p-0">
      {
        previousPost && (
          <Card
            title="Post précédent"
            href={`/posts/${previousPost.slug}`}
            body={previousPost.data.title}
          />
        )
      }
      {
        nextPost && (
          <Card
            title="Post suivant"
            href={`/posts/${nextPost.slug}`}
            body={nextPost.data.title}
          />
        )
      }
    </ul>
  </main>
</Layout>
<style is:global>
  h2 {
    font-size: 1.5em;
    margin-top: 0.75rem;
    margin-bottom: 0.75rem;
    font-weight: bold;
  }
  .content code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .content strong {
    color: rgb(var(--accent));
  }
  .link-card {
    width: fit-content;
    margin: auto;
  }
</style>
